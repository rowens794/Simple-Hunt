include mixins/_userClueDisplay

html(lang='en')
    head
        title The Hunt - A Charleston Adventure
        // Required meta tags
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
        meta(name='description', content='Mobland - Mobile App Landing Page Template')
        meta(name='keywords', content='HTML5, bootstrap, mobile, app, landing, ios, android, responsive')
        // Font
        link(rel='dns-prefetch', href='//fonts.googleapis.com')
        link(href='https://fonts.googleapis.com/css?family=Rubik:300,400,500', rel='stylesheet')
        // Bootstrap CSS
        link(rel='stylesheet', href='/stylesheets/bootstrap.min.css')
        // Themify Icons
        link(rel='stylesheet', href='/stylesheets/themify-icons.css')
        // Owl carousel
        link(rel='stylesheet', href='/stylesheets/owl.carousel.min.css')
        // Main css
        link(href='/stylesheets/styleD.css', rel='stylesheet')
        link(rel='shortcut icon', type='image/ico', href='/images/fav.ico')

    body(data-spy='scroll', data-target='#navbar', data-offset='30')
        
        // Nav Menu
        include ./layoutComponents/MenuD
        
        // hero image                
        header#home.bg-gradient
        
        //content
        //a.btn.btn-outline-dark.btn-sm(href='#', data-toggle='modal', data-target='#modalCreateClue') Edit Clue
        br
        br

        //sets a variable to determine whether to update an existing hunt or create a new hunt
        if huntDetails
            - actionlink = '/edithunt/' + huntDetails._id
        else 
            - actionlink = '/edithunt/'
        
        //create a form to create and edit hunts
        .container
            form(action=actionlink, method='post')
                .text-center
                    h3 Edit #{huntDetails.huntName}
                    a(href='#', data-toggle='modal', data-target='#modalDeleteForm') Delete Hunt
                br
                
                .row
                    .col-lg-6
                        .mb-4
                            label(for='huntName') Hunt Name
                            input.form-control.validate(type='text', name='huntName', id="huntName", value=huntDetails.huntName || "", required, focus)
                        .mb-4
                            label(for='difficulty') Difficulty
                            input.form-control.validate(type='text', name='difficulty', id="difficulty", value=huntDetails.difficulty || "")
                        .mb-4
                            label(for='startDate') Start Date (leave blank if always available)
                            input.form-control.validate(type='text', name='startDate', id="startDate", value=huntDetails.startDate || "")
                        .mb-4
                            label(for='huntDescription') Hunt Description (target 100-125 words)
                            textarea.form-control.validate(cols="60", rows="6", type='text', name='huntDescription', id='huntDescription')=value=huntDetails.huntDescription                   
                    
                    .col-lg-6
                        .mb-3
                            label(for='huntStory') Hunt Story (target 250-300 words)
                            textarea.form-control.validate(cols="60", rows="12", type='text', name='huntStory', id='huntStory')=huntDetails.huntStory
        
                .row
                    .col-lg-4
                        h4 Header Picture
                            input.form-control.validate(type='text', name='headerPicture', id="headerPicture", value=huntDetails.headerPicture || "")
                        if (huntDetails.headerPicture)
                            img.card-img-top(src=huntDetails.headerPicture)
                        else
                            p no picture set

                    .col-lg-4
                        h4 Card Picture
                            input.form-control.validate(type='text', name='cardPicture', id="cardPicture", value=huntDetails.cardPicture || "")
                        if (huntDetails.cardPicture)
                            img.card-img-top(src=huntDetails.cardPicture)
                        else
                            p no picture set

                    .col-lg-4
                        h4 Map Area Picture
                            input.form-control.validate(type='text', name='mapAreaPicture', id="mapAreaPicture", value=huntDetails.mapAreaPicture || "")  
                        if huntDetails.mapAreaPicture
                            img.card-img-top(src=huntDetails.mapAreaPicture)
                        else    
                            p no picture set
                br
                
                .row
                    .col-lg-10
                    .col-lg-2
                        button.btn.btn-primary.buttonHolder(type='submit') Save Hunt
            br
                            
        // Modal Login Form
        form#modalDeleteForm.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true', action='/editHunt/'+huntDetails._id+'/deletehunt', method='get')
            .modal-dialog(role='document')
                .modal-content
                    .modal-header.text-center
                        h4.modal-title.w-100.font-weight-bold Are you sure you want to delete the hunt?
                        button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') ×
                    
                    .modal-body.mx-3
                        .modal-body.d-flex.justify-content-center
                            button.btn.btn-primary(type='submit') Delete Hunt
                        br

        //create a form to create and edit hunts
        .container
            .row
                .col-lg-3
                    h3 Add/Edit Clues
                .col-lg-3
                    .text-center
                        a.btn.btn-outline-dark.btn-lg(href='#', data-toggle='modal', data-target='#modalCreateClue') Create Clue
        
        //iterate through each clue
        if huntDetails.clues
            each clue, index in huntDetails.clues
                br
                .container
                    .section-title
                        h3 Clue ##{clue.clueOrder} 
                        .text-center
                        
                        .card-deck.bg-light.containerMargin.border.border-dark.rounded
                            .card
                                .card-body.whiteBackground  
                                    +userClueDisplay(clue)
                            .card
                                .card-body
                                    .media
                                        iframe(width='100%', height='50%', src="https://www.google.com/maps/embed/v1/place?key="+process.env.MAP_KEY+"&q="+clue.clueLat+","+clue.clueLong+"&zoom=19&maptype=satellite")


        //modal create clue popup
        form#modalCreateClue.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
            .modal-dialog(role='document')
                .modal-content
                    .modal-header.text-center
                        h4.modal-title.w-100.font-weight-bold Select Type of Clue to Create
                        button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') ×

                    .modal-body.d-flex.justify-content-center
                        a.btn.btn-outline-dark.btn-lg.clue_Select_button(href='#', data-toggle='modal', data-target='#basicClue', data-dismiss='modal') Basic Clue

                    .modal-body.d-flex.justify-content-center
                        a.btn.btn-outline-dark.btn-lg.clue_Select_button(href='#', data-toggle='modal', data-target='#multiImgClue', data-dismiss='modal') Multi-Img Clue
                        
                    .modal-body.d-flex.justify-content-center
                        a.btn.btn-outline-dark.btn-lg.clue_Select_button(href='#', data-toggle='modal', data-target='#hotColdClue', data-dismiss='modal') Hot/Cold Clue

                    .modal-footer.d-flex.justify-content-center
                        button.btn.btn-primary(data-toggle='modal', data-dismiss='modal') Cancel

        //modal create basic clue
        form#basicClue.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true', action='/createClue/'+huntDetails._id, method='post')
            .modal-dialog.modal-lg(role='document')
                .modal-content
                    input(type="hidden" id="clueType" name="clueType" value="BasicClue")

                    .modal-header.text-center
                        h4.modal-title.w-100.font-weight-bold Create a Basic Clue
                        button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') ×
                    
                    .modal-body.mx-3
                        .md-form.mb-4
                            label(for='shortName') Create a short name:
                            textarea.form-control.validate(cols="60", rows="2", type='text', name='shortName', id='shortName', placeholder='Short Name for Clue', required)
                        
                        .md-form.mb-4
                            label(for='textarea') Create the Clue text:
                            textarea.form-control.validate(cols="60", rows="2", type='text', name='clue', id='clue', placeholder='full clue text', required)
                        
                        .md-form.mb-4
                            label(for='imageLink') Link to Clue Image:
                            input.form-control.validate(type='text', name='imageLink', id='imageLink', placeholder='www.img.com/img')

                        .md-form.mb-4
                            label(for='xCord') Create the Clue Coordinates:
                            .row
                                .col-lg-6
                                    input.form-control.validate(type='text', name='xCord', id='xCord', placeholder='Latitude', required)
                                .col-lg-6
                                    input.form-control.validate(type='text', name='yCord', id='yCord', placeholder='Longitude', required)

                        .md-form.mb-4
                            .row
                                .col-lg-6
                                    label(for='marginOfError') Margin of Error (in feet from x/y coords):
                                    input.form-control.validate(type='text', name='marginOfError', id='marginOfError', placeholder='25')
                                .col-lg-6
                                    label(for='successPic') Link to Success Pic:
                                    input.form-control.validate(type='text', name='successPic', id='successPic', placeholder='www.img.com/img')
                        

                    .modal-footer.d-flex.justify-content-center
                        button.btn.btn-primary(type='submit') Create Clue

        //modal create Multi-Img Clue
        form#multiImgClue.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true', action='/createClue/'+huntDetails._id, method='post')
            .modal-dialog.modal-lg(role='document')
                .modal-content
                    input(type="hidden" id="clueType" name="clueType" value="MultiImgClue")
                    .modal-header.text-center
                        h4.modal-title.w-100.font-weight-bold Create a Multi-Image Clue
                        button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') ×
                    
                    .modal-body.mx-3
                        .md-form.mb-4
                            label(for='shortName') Create a short name:
                            textarea.form-control.validate(cols="60", rows="1", type='text', name='shortName', id='shortName', placeholder='Short Name for Clue', required)
                        
                        .md-form.mb-4
                            label(for='imageLink') Include up to 4 images
                            .row
                                .col-lg-8
                                    textarea.form-control.validate(cols="60", rows="1", type='text', name='clue', id='clue1', placeholder='Image 1 Text')
                                .col-lg-4
                                    input.form-control.validate(type='text', name='imageLink', id='imageLink1', placeholder='www.img.com/img')
                            .row
                                .col-lg-8
                                    textarea.form-control.validate(cols="60", rows="1", type='text', name='clue', id='clue2', placeholder='Image 2 Text')
                                .col-lg-4
                                    input.form-control.validate(type='text', name='imageLink', id='imageLink2', placeholder='www.img.com/img')
                            .row
                                .col-lg-8
                                    textarea.form-control.validate(cols="60", rows="1", type='text', name='clue', id='clue3', placeholder='Image 3 Text')
                                .col-lg-4
                                    input.form-control.validate(type='text', name='imageLink', id='imageLink3', placeholder='www.img.com/img')
                            .row
                                .col-lg-8
                                    textarea.form-control.validate(cols="60", rows="1", type='text', name='clue', id='clue4', placeholder='Image 4 Text')
                                .col-lg-4
                                    input.form-control.validate(type='text', name='imageLink', id='imageLink4', placeholder='www.img.com/img')

                        .md-form.mb-4
                            label(for='xCord') Create the Clue Coordinates:
                            .row
                                .col-lg-4
                                    input.form-control.validate(type='text', name='xCord', id='xCord', placeholder='Latitude', required)
                                .col-lg-4
                                    input.form-control.validate(type='text', name='yCord', id='yCord', placeholder='Longitude', required)
                                .col-lg-4
                                    input.form-control.validate(type='text', name='marginOfError', id='marginOfError', placeholder='Margin of Error (ft)', required)
                        .md-form.mb-4
                            label(for='successPic') Link to Success Pic:
                            input.form-control.validate(type='text', name='successPic', id='successPic', placeholder='www.img.com/img')
                            

                    .modal-footer.d-flex.justify-content-center
                        button.btn.btn-primary(type='submit') Create Clue

        
        //modal create Hot/Cold Clue
        form#hotColdClue.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true', action='/createClue/'+huntDetails._id, method='post')
            .modal-dialog(role='document')
                .modal-content
                    input(type="hidden" id="clueType" name="clueType" value="HotColdClue")
                    .modal-header.text-center
                        h4.modal-title.w-100.font-weight-bold Create a Hot Cold Clue
                        button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') ×
                    
                    .modal-body.mx-3
                        .md-form.mb-4
                            label(for='shortName') Create a short name:
                            textarea.form-control.validate(cols="60", rows="1", type='text', name='shortName', id='shortName', placeholder='Short Name for Clue', required)
                        
                        .md-form.mb-4
                            label(for='textarea') Create the Clue text:
                            textarea.form-control.validate(cols="60", rows="1", type='text', name='clue', id='clue', placeholder='full clue text', required)

                        .md-form.mb-4
                            label(for='xCord') Create the Clue Coordinates:
                            input.form-control.validate(type='text', name='xCord', id='xCord', placeholder='Latitude', required)
                            input.form-control.validate(type='text', name='yCord', id='yCord', placeholder='Longitude', required)

                        .md-form.mb-4
                            label(for='maxCold') Max Cold Distance:
                            input.form-control.validate(type='text', name='maxCold', id='maxCold', placeholder='2000', required)

                        .md-form.mb-4
                            label(for='marginOfError') Margin of Error (in feet from x/y coords):
                            input.form-control.validate(type='text', name='marginOfError', id='marginOfError', placeholder='25')
                        
                        .md-form.mb-4
                            label(for='successPic') Link to Success Pic:
                            input.form-control.validate(type='text', name='successPic', id='successPic', placeholder='www.img.com/img')


                    .modal-footer.d-flex.justify-content-center
                        button.btn.btn-primary(type='submit') Create Clue

        // // end .section
        footer.my-5.text-center
            // Copyright removal is not prohibited!
            p.mb-2
                small COPYRIGHT © 2018. ALL RIGHTS RESERVED. TREASURE HUNT, LLC
            small
                a.m-2(href='#') TERMS
                a.m-2(href='#') PRIVACY
        // jQuery and Bootstrap
        script(src='/javascripts/jquery-3.2.1.min.js')
        script(src='/javascripts/bootstrap.bundle.min.js')
        // Plugins JS
        script(src='/javascripts/owl.carousel.min.js')
        // Custom JS
        script(src='/javascripts/script.js')